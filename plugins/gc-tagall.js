const handler = async (m, {isOwner, isAdmin, conn, text, participants, args, command, usedPrefix}) => {

  if (usedPrefix == 'a' || usedPrefix == 'A') return;
 
  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }
  const pesan = args.join` `;
const oi = `‚á¢=ÕüÕüÕûÕûùô∞ùöüùöíùöúùöò : ${pesan}`;
  let teks = `‚ò†Ô∏éÔ∏éùêëùêÑùêïùêàùêïùêÄùêç ùêåùêÄùêëùêàùêÇùêéùêçùêÑùêí"\n  ‚ßºPÃº‚ßΩ= ${participants.length} \n\n ${oi}\n\n‚ï≠‚Ä¢‚îà‚îà‚Ä¢‚îà‚îà‚ä∞‚ò†Ô∏éÔ∏é‚îà‚Ä¢‚îà‚îà‚Ä¢‚óå·úì ›ä ·úíùÖÑ\n`;
  for (const mem of participants) {
    teks += `‚îÇ ‚ò†Ô∏éÔ∏éìÜô. @${mem.id.split('@')[0]}\n`;
  }
  teks += `‚ï∞‚îÄ‚îê ‚Ä¢ ‚Ä¢„Ö§‚Ä¢-ÀèÀã‚ò†Ô∏éÔ∏éÀäÀé-‚Ä¢ ‚Ä¢„Ö§‚Ä¢
        Íí∑Ô∏∂Ô∏∂Íí∑Ô∏∂Ô∏∂Íí∑Íí¶Ô∏∂‚úßÍí∑‚ÇäÀö`;
  conn.sendMessage(m.chat, {text: teks, mentions: participants.map((a) => a.id)} );
};
handler.help = ['todos <mesaje>'];
handler.tags = ['group'];
handler.command = /^(tagall|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;
export default handler;